#!/bin/sh

usage() {
  cat <<-USAGE
jit translates a script into a binary when the script is first run.

Usage: jit <strategy> <source> args ..."

Supported strategies are:
- cc: simple compilation via cc(1)
- flex: simple compilation via flex(1) and cc(1)
USAGE

exit 1
}

die() {
  echo "$@" >&2
  exit 1
}

STRATEGY=$1; shift
SOURCE=$1; shift

[ "$SOURCE" ] || usage

FULL_SOURCE=$(cd "$(dirname "$SOURCE")" && pwd)/$(basename "$SOURCE")

REL_SOURCE=${FULL_SOURCE#$HOME}
BINARY=~/.jit/$REL_SOURCE

if [ $SOURCE -nt $BINARY ] ; then

# echo "${STRATEGY}ing $SOURCE into $BINARY" >&2
mkdir -p -m 0777 $(dirname $BINARY)

case "$STRATEGY" in
  cc)
    sed '1 s/^.*$//' ${SOURCE} > $BINARY.c &&
    cc -o ${BINARY} $BINARY.c -O2
    ;;
  flex)
    sed '1 s/^.*$//' ${SOURCE} > $BINARY.fl &&
    flex -o ${BINARY}.c ${BINARY}.fl &&
    cc -o ${BINARY} ${BINARY}.c -O2 -lfl
    ;;
  *)
    usage
    ;;
esac

[ $? == "0" ] || die "Cannot build ${BINARY}"

fi

exec -a $0 $BINARY "$@"
